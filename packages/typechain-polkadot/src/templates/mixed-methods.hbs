/* This file is auto-generated */

import type { ContractPromise } from '@polkadot/api-contract';
import type { ApiPromise } from '@polkadot/api';
import type { KeyringPair } from '@polkadot/keyring/types';
import type { GasLimit, GasLimitAndRequiredValue, Result } from '@prosopo/typechain-types';
import type { QueryReturnType } from '@prosopo/typechain-types';
import { queryOkJSON, queryJSON, handleReturnType } from '@prosopo/typechain-types';
import { txSignAndSend } from '@prosopo/typechain-types';
import type * as ArgumentTypes from '../types-arguments/{{{fileName}}}{{{jsExt}}}';
import type * as ReturnTypes from '../types-returns/{{{fileName}}}{{{jsExt}}}';
import type BN from 'bn.js';
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import {ReturnNumber} from '@prosopo/typechain-types';
import {getTypeDescription} from './../shared/utils{{{jsExt}}}';
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import type { EventRecord } from '@polkadot/types/interfaces';
import {decodeEvents} from "../shared/utils{{{jsExt}}}";
import DATA_TYPE_DESCRIPTIONS from '../data/{{{fileName}}}.json'{{{assertJson}}};
import EVENT_DATA_TYPE_DESCRIPTIONS from '../event-data/{{{fileName}}}.json'{{{assertJson}}};
{{#if additionalImports.length}}
{{#each additionalImports}}
import { {{#each values}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}} } from '{{{path}}}';
{{/each}}{{/if}}

export default class Methods {
	readonly __nativeContract : ContractPromise;
	readonly __keyringPair : KeyringPair;
	readonly __callerAddress : string;
	readonly __apiPromise: ApiPromise;

	constructor(
		apiPromise : ApiPromise,
		nativeContract : ContractPromise,
		keyringPair : KeyringPair,
	) {
		this.__apiPromise = apiPromise;
		this.__nativeContract = nativeContract;
		this.__keyringPair = keyringPair;
		this.__callerAddress = keyringPair.address;
	}

{{#each methods}}
	/**
	* {{{toCamelCase name}}}
	*
	{{#each args}}
	* @param { {{{type.tsStr}}} } {{{toCamelCase name}}},
	{{/each}}
	* @returns { {{#if this.returnType}}{{{this.returnType.tsStr}}}{{else}}void{{/if}} }
	*/
	"{{{toCamelCase name}}}" (
	{{#each args}}
		{{{name}}}: {{{type.tsStr}}},
	{{/each}}
		__options: {{#if payable}}GasLimitAndRequiredValue{{else}}GasLimit{{/if}},
	){{{buildReturnType this}}}{
		return {{{buildReturn this}}} "{{{toCamelCaseForFunctions originalName}}}", {{#ifTx this}}(events: EventRecord[]) => {
			return decodeEvents(events, this.__nativeContract, EVENT_DATA_TYPE_DESCRIPTIONS);
		}, {{/ifTx}}[{{#each args}}{{{name}}}{{#unless @last}}, {{/unless}}{{/each}}], __options{{{buildWrapper this}}});
	}

{{/each}}
}
